/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LeftSidebarImport } from './routes/_left-sidebar'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as LeftSidebarSettingsImport } from './routes/_left-sidebar/settings'
import { Route as LeftSidebarProfileImport } from './routes/_left-sidebar/profile'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AppPostCreateImport } from './routes/_app/post/create'
import { Route as AppPostPostIdImport } from './routes/_app/post/$postId'

// Create/Update Routes

const LeftSidebarRoute = LeftSidebarImport.update({
  id: '/_left-sidebar',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const LeftSidebarSettingsRoute = LeftSidebarSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LeftSidebarRoute,
} as any)

const LeftSidebarProfileRoute = LeftSidebarProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => LeftSidebarRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AppPostCreateRoute = AppPostCreateImport.update({
  id: '/post/create',
  path: '/post/create',
  getParentRoute: () => AppRoute,
} as any)

const AppPostPostIdRoute = AppPostPostIdImport.update({
  id: '/post/$postId',
  path: '/post/$postId',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_left-sidebar': {
      id: '/_left-sidebar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LeftSidebarImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_left-sidebar/profile': {
      id: '/_left-sidebar/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof LeftSidebarProfileImport
      parentRoute: typeof LeftSidebarImport
    }
    '/_left-sidebar/settings': {
      id: '/_left-sidebar/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LeftSidebarSettingsImport
      parentRoute: typeof LeftSidebarImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/post/$postId': {
      id: '/_app/post/$postId'
      path: '/post/$postId'
      fullPath: '/post/$postId'
      preLoaderRoute: typeof AppPostPostIdImport
      parentRoute: typeof AppImport
    }
    '/_app/post/create': {
      id: '/_app/post/create'
      path: '/post/create'
      fullPath: '/post/create'
      preLoaderRoute: typeof AppPostCreateImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppPostPostIdRoute: typeof AppPostPostIdRoute
  AppPostCreateRoute: typeof AppPostCreateRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppPostPostIdRoute: AppPostPostIdRoute,
  AppPostCreateRoute: AppPostCreateRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface LeftSidebarRouteChildren {
  LeftSidebarProfileRoute: typeof LeftSidebarProfileRoute
  LeftSidebarSettingsRoute: typeof LeftSidebarSettingsRoute
}

const LeftSidebarRouteChildren: LeftSidebarRouteChildren = {
  LeftSidebarProfileRoute: LeftSidebarProfileRoute,
  LeftSidebarSettingsRoute: LeftSidebarSettingsRoute,
}

const LeftSidebarRouteWithChildren = LeftSidebarRoute._addFileChildren(
  LeftSidebarRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof LeftSidebarRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/profile': typeof LeftSidebarProfileRoute
  '/settings': typeof LeftSidebarSettingsRoute
  '/': typeof AppIndexRoute
  '/post/$postId': typeof AppPostPostIdRoute
  '/post/create': typeof AppPostCreateRoute
}

export interface FileRoutesByTo {
  '': typeof LeftSidebarRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/profile': typeof LeftSidebarProfileRoute
  '/settings': typeof LeftSidebarSettingsRoute
  '/': typeof AppIndexRoute
  '/post/$postId': typeof AppPostPostIdRoute
  '/post/create': typeof AppPostCreateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_left-sidebar': typeof LeftSidebarRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_left-sidebar/profile': typeof LeftSidebarProfileRoute
  '/_left-sidebar/settings': typeof LeftSidebarSettingsRoute
  '/_app/': typeof AppIndexRoute
  '/_app/post/$postId': typeof AppPostPostIdRoute
  '/_app/post/create': typeof AppPostCreateRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/profile'
    | '/settings'
    | '/'
    | '/post/$postId'
    | '/post/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/profile'
    | '/settings'
    | '/'
    | '/post/$postId'
    | '/post/create'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_left-sidebar'
    | '/_auth/login'
    | '/_left-sidebar/profile'
    | '/_left-sidebar/settings'
    | '/_app/'
    | '/_app/post/$postId'
    | '/_app/post/create'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  LeftSidebarRoute: typeof LeftSidebarRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  LeftSidebarRoute: LeftSidebarRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/_auth",
        "/_left-sidebar"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/",
        "/_app/post/$postId",
        "/_app/post/create"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login"
      ]
    },
    "/_left-sidebar": {
      "filePath": "_left-sidebar.tsx",
      "children": [
        "/_left-sidebar/profile",
        "/_left-sidebar/settings"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_left-sidebar/profile": {
      "filePath": "_left-sidebar/profile.tsx",
      "parent": "/_left-sidebar"
    },
    "/_left-sidebar/settings": {
      "filePath": "_left-sidebar/settings.tsx",
      "parent": "/_left-sidebar"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/post/$postId": {
      "filePath": "_app/post/$postId.tsx",
      "parent": "/_app"
    },
    "/_app/post/create": {
      "filePath": "_app/post/create.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
