services:
  bandada:
    # https://github.com/bandada-infra/bandada/blob/f92d71681f9f268e46ce1ab41b11c9e5622fb29c/docker-compose.prod.yml#L9C16-L9C75
    image: ghcr.io/sripwoud/bandada-api:latest
    container_name: pse-forum-bandada
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      DB_SCHEMA: bandada
      DB_TYPE: postgres
      DB_URL: postgres://postgres:postgres@postgres:5432/postgres
      API_URL: http://localhost:3000
    pull_policy: always
    restart: unless-stopped
    ports: ["3001:3000"]

  client:
    image: ghcr.io/privacy-scaling-explorations/pse-forums-client:latest
    container_name: pse-forum-client
    environment:
      VITE_SERVER_URL: http://server:3000
    ports: ["80:80"]

  # used during local development only
  mail:
    image: inbucket/inbucket:stable
    container_name: pse-forum-mail
    restart: unless-stopped
    ports: ["9000:9000", "2500:2500", "1100:1100"]

  server:
    image: ghcr.io/privacy-scaling-explorations/pse-forums-server:latest
    container_name: pse-forum-server
    depends_on:
      migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      BANDADA_URL: http://bandada:3000
      CLIENT_URL: http://localhost # must be url on external network (not docker's), with docker compose the client is served with nginx on port 80
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      EMAIL_FROM: "${EMAIL_FROM:-pse-forum@noreply.com}"
      EMAIL_HOST: pse-forum-mail # mail service container name if using inbucket
      EMAIL_PORT: "${EMAIL_PORT:-2500}"
      JWT_SECRET: "${JWT_SECRET:-secret}"
      USE_INBUCKET: "${USE_INBUCKET:-false}"
      VITE_SERVER_URL: "${VITE_SERVER_URL:-http://localhost:3000}"
    ports: ["3000:3000"]

  postgres:
    image: postgres:latest
    container_name: pse-forum-postgres
    restart: unless-stopped
    environment:
      PGUSER: postgres # used by pg_isready
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    ports: ["5432:5432"]
    volumes: ["pse-forum-bandada:/var/lib/postgresql/data"]

  migrate:
    image: postgres:latest
    container_name: pse-forum-migrate
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # env var used by psql and pg_isready (not postgres server which uses POSTGRES_PASSWORD)
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: postgres
    volumes:
      [
        "./apps/server/db/migrations:/migrations",
        "./apps/server/db/migrate.sh:/migrate.sh",
      ]
    entrypoint: ["/bin/sh", "-c", "/migrate.sh"]
    restart: "no"

volumes:
  pse-forum-bandada:
