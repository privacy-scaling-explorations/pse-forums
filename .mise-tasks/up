#!/bin/sh
set -eu

GREEN="\033[32m"
RED="\033[31m"
RESET="\033[0m"

log() {
  printf "%b%s%b\n" "$1" "$2" "$RESET"
}

open_url() {
  URL="$1"
  printf "%s\n" "🌍 Opening $URL in your current browser session..."

  if command -v xdg-open >/dev/null 2>&1; then
    xdg-open "$URL" # Linux
  elif command -v open >/dev/null 2>&1; then
    open "$URL" # macOS
  elif command -v start >/dev/null 2>&1; then
    start "$URL" # Windows (WSL)
  else
    >&2 log "$RED" "❌ Could not open browser. Please manually visit: $URL"
  fi
}

check_docker() {
  if ! command -v docker >/dev/null 2>&1; then
    >&2 log "$RED" "❌ Docker is not installed or not in your PATH."
    open_url "https://docs.docker.com/get-started/get-docker/"
    exit 1
  fi

  if ! docker info >/dev/null 2>&1; then
    >&2 log "$RED" "❌ Docker is installed but not running. Please start Docker."
    exit 1
  fi

  if ! command -v docker compose >/dev/null 2>&1; then
    >&2 log "$RED" "❌ Docker Compose is not installed or not in your PATH."
    open_url "https://docs.docker.com/compose/install/"
    exit 1
  fi
}

start_docker() {
  printf "%s\n" "🐳 Starting Docker containers..."
  docker compose up -d
}

wait_for_client() {
  echo "⌛ Waiting for client to start..."
  until docker compose ps client | grep -q "Up"; do
    sleep 1
  done
  log "$GREEN" "✅ Client is up!"
}

get_client_url() {
  PORT=$(docker compose exec client printenv PORT 2>/dev/null || echo "80")
  CLIENT_URL="http://localhost${PORT:+:$PORT}"
  CLIENT_URL="${CLIENT_URL%:80}"
  echo "$CLIENT_URL"
}

open_browser() {
  CLIENT_URL=$(get_client_url)
  open_url "$CLIENT_URL"
}

wait_for_db() {
  printf "%s\n" "⌛ Waiting for database to be start..."
  until docker exec "$DB_CONTAINER" pg_isready -U "$DB_USER" >/dev/null 2>&1; do
    sleep 1
  done
  log "$GREEN" "✅ Database is up!"
}

run_migrations() {
  log "$GREEN" "📂 Running database migrations..."

  for migration in "$SCRIPT_DIR/apps/server/db/migrations"/*/*.sql; do
    log "$GREEN" "🚀 Applying migration: $migration"
    docker exec -i "$DB_CONTAINER" psql -U "$DB_USER" -d "$DB_NAME" <"$migration" >/dev/null 2>&1
  done

  log "$GREEN" "🎉 All migrations applied successfully!"
}

main() {
  DB_CONTAINER="pse-forum-postgres"
  DB_NAME="postgres"
  DB_USER="postgres"

  # Resolve the actual path of the script (handle symlinks & direct execution)
  SCRIPT_PATH="$(readlink -f "$0" 2>/dev/null || realpath "$0")"
  SCRIPT_DIR="$(cd "$(dirname "$SCRIPT_PATH")/.." && pwd)" # Move up to project root
  cd "$SCRIPT_DIR"

  check_docker
  start_docker
  wait_for_db
  run_migrations
  wait_for_client
  open_browser
}

main
